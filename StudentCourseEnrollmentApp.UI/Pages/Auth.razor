@page "/auth"
@using Microsoft.AspNetCore.Authorization
@using StudentCourseEnrollmentApp.Core.Application.DTOs
@using StudentCourseEnrollmentApp.UI.Services
@attribute [AllowAnonymous]
@inject Services.Interfaces.IAuthenticationService AuthService
@inject NavigationManager NavManager
@inject CustomAuthStateProvider AuthStateProvider
@inject IToastService ToastService

<PageTitle>Login/Register</PageTitle>

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <div class="auth-logo">
                <span class="oi oi-graduation-cap"></span>
            </div>
            <h1 class="auth-title">Welcome Back</h1>
            <p class="auth-subtitle">Sign in to your account or create a new one</p>
        </div>

        @if (IsLogin)
        {
            <div class="auth-form-container">
                <h3 class="form-title">Sign In</h3>
                <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />

                    <div class="form-group">
                        <label class="form-label">Email Address</label>
                        <div class="input-group">
                            <span class="input-icon">
                                <span class="oi oi-envelope-closed"></span>
                            </span>
                            <InputText @bind-Value="LoginModel.Email" class="form-control" placeholder="Enter your email" />
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Password</label>
                        <div class="input-group">
                            <span class="input-icon">
                                <span class="oi oi-lock-locked"></span>
                            </span>
                            <InputText type="password" @bind-Value="LoginModel.Password" class="form-control" placeholder="Enter your password" />
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary btn-lg w-full" disabled="@IsLoading">
                        @if (IsLoading)
                        {
                            <span class="loading"></span>
                            <span>Signing In...</span>
                        }
                        else
                        {
                            <span class="oi oi-account-login"></span>
                            <span>Sign In</span>
                        }
                    </button>
                </EditForm>
            </div>
        }
        else
        {
            <div class="auth-form-container">
                <h3 class="form-title">Create Account</h3>
                <EditForm Model="RegisterModel" OnValidSubmit="HandleRegister">
                    <DataAnnotationsValidator />

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">First Name</label>
                                <div class="input-group">
                                    <span class="input-icon">
                                        <span class="oi oi-person"></span>
                                    </span>
                                    <InputText @bind-Value="RegisterModel.FirstName" class="form-control" placeholder="First name" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Last Name</label>
                                <div class="input-group">
                                    <span class="input-icon">
                                        <span class="oi oi-person"></span>
                                    </span>
                                    <InputText @bind-Value="RegisterModel.LastName" class="form-control" placeholder="Last name" />
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Email Address</label>
                        <div class="input-group">
                            <span class="input-icon">
                                <span class="oi oi-envelope-closed"></span>
                            </span>
                            <InputText @bind-Value="RegisterModel.Email" class="form-control" placeholder="Enter your email" />
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Password</label>
                        <div class="input-group">
                            <span class="input-icon">
                                <span class="oi oi-lock-locked"></span>
                            </span>
                            <InputText type="password" @bind-Value="RegisterModel.Password" class="form-control" placeholder="Create a password" />
                        </div>
                    </div>

                    <button type="submit" class="btn btn-success btn-lg w-full" disabled="@IsLoading">
                        @if (IsLoading)
                        {
                            <span class="loading"></span>
                            <span>Creating Account...</span>
                        }
                        else
                        {
                            <span class="oi oi-plus"></span>
                            <span>Create Account</span>
                        }
                    </button>
                </EditForm>
            </div>
        }

        <div class="auth-footer">
            <button class="btn btn-link" @onclick="ToggleForm">
                @if (IsLogin)
                {
                    <span>Don't have an account? <strong>Sign up here</strong></span>
                }
                else
                {
                    <span>Already have an account? <strong>Sign in here</strong></span>
                }
            </button>
        </div>
    </div>
</div>

@code {
    private UserLoginRequestDTO LoginModel = new();
    private UserRegistrationRequestDTO RegisterModel = new();
    private bool IsLogin = true;
    private bool IsLoading = false;

    private void ToggleForm() => IsLogin = !IsLogin;

    private async Task HandleLogin()
    {
        IsLoading = true;
        try
        {
            var result = await AuthService.LoginUserAsync(LoginModel);
            if (result.Result)
            {
                ToastService.ShowSuccess("Welcome Back!", "You have successfully signed in.");
                await AuthStateProvider.MarkUserAsAuthenticated(result.Token);
                NavManager.NavigateTo("/", forceLoad: true);
            }
            else
            {
                ToastService.ShowError("Login Failed", "Invalid email or password. Please try again.");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError("Login Error", "An error occurred during login. Please try again.");
        }
        finally
        {
            IsLoading = false;
        }
    }

    private async Task HandleRegister()
    {
        IsLoading = true;
        try
        {
            var result = await AuthService.RegisterUserAsync(RegisterModel);
            if (result.Result && result.Token != null)
            {
                ToastService.ShowSuccess("Account Created!", "Your account has been created successfully.");
                await AuthStateProvider.MarkUserAsAuthenticated(result.Token);
                NavManager.NavigateTo("/", forceLoad: true);
            }
            else
            {
                ToastService.ShowError("Registration Failed", "Unable to create account. Please try again.");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError("Registration Error", "An error occurred during registration. Please try again.");
        }
        finally
        {
            IsLoading = false;
        }
    }
}