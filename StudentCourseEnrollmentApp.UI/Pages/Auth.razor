@page "/auth"
@using Microsoft.AspNetCore.Authorization
@using StudentCourseEnrollmentApp.Core.Application.DTOs
@attribute [AllowAnonymous]
@inject Services.Interfaces.IAuthenticationService AuthService
@inject NavigationManager NavManager
@inject CustomAuthStateProvider AuthStateProvider

<PageTitle>Login/Register</PageTitle>

<div class="container">
    <div class="card p-4">
        <h3 class="text-center">Login or Register</h3>

        @if (IsLogin)
        {
            <h5 class="mt-4">Login</h5>
            <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label>Email:</label>
                    <InputText @bind-Value="LoginModel.Email" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Password:</label>
                    <InputText type="password" @bind-Value="LoginModel.Password" class="form-control" />
                </div>

                <button type="submit" class="btn btn-primary btn-block mt-3">Login</button>
            </EditForm>
        }
        else
        {
            <h5 class="mt-4">Register</h5>
            <EditForm Model="RegisterModel" OnValidSubmit="HandleRegister">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>First Name:</label>
                            <InputText @bind-Value="RegisterModel.FirstName" class="form-control" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Last Name:</label>
                            <InputText @bind-Value="RegisterModel.LastName" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label>Email:</label>
                    <InputText @bind-Value="RegisterModel.Email" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Password:</label>
                    <InputText type="password" @bind-Value="RegisterModel.Password" class="form-control" />
                </div>

                <button type="submit" class="btn btn-success btn-block mt-3">Register</button>
            </EditForm>
        }

        <button class="btn btn-link mt-3" @onclick="ToggleForm">
            @if (IsLogin)
            {
                <span>Need an account? Register here.</span>
            }
            else
            {
                <span>Already have an account? Login here.</span>
            }
        </button>
    </div>
</div>

@code {
    private UserLoginRequestDTO LoginModel = new();
    private UserRegistrationRequestDTO RegisterModel = new();
    private bool IsLogin = true;

    private void ToggleForm() => IsLogin = !IsLogin;

    private async Task HandleLogin()
    {
        var result = await AuthService.LoginUserAsync(LoginModel);
        if (result.Result)
        {
            await AuthStateProvider.MarkUserAsAuthenticated(result.Token);
            NavManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
        }
    }

    private async Task HandleRegister()
    {
        var result = await AuthService.RegisterUserAsync(RegisterModel);
        if (result.Result)
        {
            if (result.Result && result.Token != null)
            {
                await AuthStateProvider.MarkUserAsAuthenticated(result.Token);
                NavManager.NavigateTo("/", forceLoad: true);
            }
        }
        else
        {
        }
    }
}