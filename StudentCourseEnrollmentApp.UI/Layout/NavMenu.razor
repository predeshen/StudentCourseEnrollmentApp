@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavManager
@using Microsoft.AspNetCore.Components.Authorization

<AuthorizeView>
    <Authorized>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="courses">
                <span class="oi oi-list-rich" aria-hidden="true"></span> All Courses
            </NavLink>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="courses">
                <span class="oi oi-list-rich" aria-hidden="true"></span> All Courses
            </NavLink>
        </div>
    </NotAuthorized>
</AuthorizeView>
<AuthorizeView>
    <Authorized>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="my-courses">
                <span class="oi oi-book" aria-hidden="true"></span> My Courses
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="admin">
                <span class="oi oi-cog" aria-hidden="true"></span> Admin
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auth" @onclick="Logout">
                <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
            </NavLink>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auth">
                <span class="oi oi-account-login" aria-hidden="true"></span> Login/Register
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="splash-test">
                <span class="oi oi-monitor" aria-hidden="true"></span> Splash Test
            </NavLink>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task Logout()
    {
        if (AuthStateProvider is CustomAuthStateProvider customAuthStateProvider)
        {
            await customAuthStateProvider.MarkUserAsLoggedOut();
        }
        NavManager.NavigateTo("/", true);
    }
}